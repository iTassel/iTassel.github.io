import os
import sys
from pwn import*
maze_str = [0x41, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x00, 
			0x41, 0x42, 0x42, 0x41, 0x41, 0x41, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x00, 
			0x41, 0x42, 0x42, 0x41, 0x42, 0x41, 0x00, 0x00, 0x42, 0x42, 0x41, 0x41, 0x00, 
			0x41, 0x42, 0x42, 0x41, 0x42, 0x41, 0x42, 0x41, 0x42, 0x42, 0x42, 0x41, 0x00, 
			0x41, 0x41, 0x41, 0x41, 0x42, 0x41, 0x42, 0x41, 0x42, 0x42, 0x42, 0x41, 0x00,
			0x42, 0x42, 0x42, 0x42, 0x42, 0x41, 0x42, 0x42, 0x42, 0x41, 0x00, 0x00, 0x00, 
			0x42, 0x41, 0x41, 0x41, 0x41, 0x41, 0x42, 0x42, 0x42, 0x00, 0x42, 0x42, 0x00, 
			0x42, 0x41, 0x42, 0x42, 0x42, 0x42, 0x42, 0x41, 0x41, 0x41, 0x41, 0x00, 0x00, 
			0x42, 0x41, 0x41, 0x41, 0x41, 0x41, 0x42, 0x41, 0x42, 0x42, 0x41, 0x42, 0x00, 
			0x42, 0x42, 0x42, 0x42, 0x42, 0x41, 0x42, 0x41, 0x42, 0x42, 0x41, 0x42, 0x00, 
			0x42, 0x42, 0x42, 0x42, 0x42, 0x41, 0x42, 0x41, 0x42, 0x42, 0x41, 0x42, 0x00, 
			0x42, 0x42, 0x42, 0x00, 0x00, 0x41, 0x41, 0x41, 0x42, 0x42, 0x41, 0x45, 0x00]
p = q = 0
FLAG = ""
direction = ['W','A','S','D']
for n in range(144):
	if p <11 and maze_str[13*(p+1) + q]!= 1 and (maze_str[13*(p+1) + q]==0x41 or maze_str[13*(p+1) + q]==0x45):
		FLAG += direction[2]
		TMP = direction[2]
		direction[2] = direction[0]
		direction[0] = TMP
		TMP = direction[1]
		direction[1] = direction[3]
		direction[3] = TMP
		p += 1
		maze_str[13*p + q] = 1
		continue
	if p >0 and maze_str[13*(p-1) + q] != 1 and (maze_str[13*(p-1) + q]==0x41 or maze_str[13*(p-1) + q]==0x45):
		FLAG += direction[0]
		TMP = direction[2]
		direction[2] = direction[0]
		direction[0] = TMP
		p -= 1
		maze_str[13*p + q] = 1
		continue
	if q <11 and maze_str[13*p + q + 1]!=1 and (maze_str[13*p + q + 1]==0x41 or maze_str[13*p + q + 1]==0x45):
		FLAG += direction[3]
		TMP = direction[3]
		direction[3] = direction[2]
		direction[2] = direction[1]
		direction[1] = direction[0]
		direction[0] = TMP
		q += 1
		maze_str[13*p + q] = 1
		continue
	if q >0 and maze_str[13*p + q - 1] != 1 and (maze_str[13*p + q - 1]==0x41 or maze_str[13*p + q - 1]==0x45):
		FLAG += direction[1]
		TMP = direction[0]
		direction[0] = direction[1]
		direction[1] = direction[2]
		direction[2] = direction[3]
		direction[3] = TMP
		q -= 1
		maze_str[13*p + q] = 1
		continue
log.success("DozerCTF{" + FLAG + "}")
